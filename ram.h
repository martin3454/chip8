
class Ram{
  private:
      uint8_t memory[4096];
  public:
      Ram();
      void dump();
      void write_byte(uint16_t adr, uint8_t val);
      uint8_t read_byte(uint16_t adr);
};


void Ram::write_byte(uint16_t adr, uint8_t val){
    memory[adr & 0xfff] = val;
}
uint8_t Ram::read_byte(uint16_t adr){
  return memory[adr & 0xfff];
}

void Ram::dump(){
  for(auto& val : memory){
    Serial.println(val);
  }
}

Ram::Ram(){
  memset(memory, 0x00, sizeof(memory));
  uint8_t uvodni_sprite[16][5] = {
    {0xF0, 0x90, 0x90, 0x90, 0xF0},
    {0x20, 0x60, 0x20, 0x20, 0x70},
    {0xF0, 0x10, 0xF0, 0x80, 0xF0},
    {0xF0, 0x10, 0xF0, 0x10, 0xF0},
    {0x90, 0x90, 0xF0, 0x10, 0x10},
    {0xF0, 0x80, 0xF0, 0x10, 0xF0},
    {0xF0, 0x80, 0xF0, 0x90, 0xF0},
    {0xF0, 0x10, 0x20, 0x40, 0x40},
    {0xF0, 0x90, 0xF0, 0x90, 0xF0},
    {0xF0, 0x90, 0xF0, 0x10, 0xF0},
    {0xF0, 0x90, 0xF0, 0x90, 0x90},
    {0xE0, 0x90, 0xE0, 0x90, 0xE0},
    {0xF0, 0x80, 0x80, 0x80, 0xF0},
    {0xE0, 0x90, 0x90, 0x90, 0xE0},
    {0xF0, 0x80, 0xF0, 0x80, 0xF0},
    {0xF0, 0x80, 0xF0, 0x80, 0x80}
  };

uint8_t index = 0;
for(auto &row : uvodni_sprite){
    for(auto item : row){
      memory[index++] = item;
      //Serial.println(item);
    }
  }
}
